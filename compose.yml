version: '3.8'
services:
  main:
    image: lint-microservice:latest
    container_name: lint-main
    ports:
      - "8000:8000"
    depends_on:
      - kafka
    command: ["yarn", "start:prod"]    

  notification-service:
    image: lint-microservice:latest
    container_name: notification-service
    ports:
      - "5005:5005"
      - "3001:3001"
    depends_on:
      - kafka
    restart: on-failure:10
    command: ["node" , "dist/apps/notification/src/main"]
    
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticvolume:/usr/share/elasticsearch/data

  logstash:
    container_name: logstash
    build: 
      context: ./logstash/
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - CONFIG_SUPPORT_ESCAPE=true
    depends_on:
      - elasticsearch
    volumes:
      - logstashvolume:/usr/share/logstash/data

  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"
  
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock